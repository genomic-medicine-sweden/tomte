{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/genomic-medicine-sweden/tomte/master/nextflow_schema.json",
    "title": "genomic-medicine-sweden/tomte pipeline parameters",
    "description": "Pipeline to analyse RNAseq from raredisease patients",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 5 columns (case, sample, fastq1, fastq2 and strandedness), and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "save_mapped_as_cram": {
                    "type": "boolean",
                    "description": "Do you want to save bam as cram",
                    "fa_icon": "far fa-file-archive"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference, etiher hg19/GRCh37 or hg38/GRCh38, it is case sensitive.",
                    "fa_icon": "fas fa-book",
                    "enum": ["hg19", "GRCh37", "hg38", "GRCh38"],
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a STAR index available this will be generated for you automatically. Combine with `--save_reference` to save STAR index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "fai": {
                    "type": "string",
                    "format": "file-path",
                    "help_text": "If none provided, will be generated automatically from the FASTA reference",
                    "description": "Path to FASTA genome index file.",
                    "pattern": "^\\S+\\.fn?a(sta)?\\.fai$",
                    "fa_icon": "far fa-file-code",
                    "hidden": true
                },
                "gtf": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.gtf(\\.gz)?$",
                    "description": "Path to GTF annotation file.",
                    "fa_icon": "fas fa-code-branch",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified."
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "platform": {
                    "type": "string",
                    "default": "illumina",
                    "description": "Specifies which platform was used for sequencing.",
                    "fa_icon": "fas fa-book",
                    "enum": ["illumina"]
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "If generated by the pipeline save the required indices/references in the results directory.",
                    "help_text": "The saved references can be used for future pipeline runs, reducing processing times.",
                    "fa_icon": "fas fa-save"
                },
                "sequence_dict": {
                    "type": "string",
                    "format": "path",
                    "fa_icon": "fas fa-chart-bar",
                    "pattern": "^\\S+\\.dict$",
                    "description": "Genome dictionary file",
                    "hidden": true
                },
                "star_index": {
                    "type": "string",
                    "format": "path",
                    "fa_icon": "fas fa-bezier-curve",
                    "description": "Path to directory or tar.gz archive for pre-built STAR index.",
                    "help_text": "Path to directory or tar.gz archive with pre-built STAR index. If not given one will be created from the given fasta and gtf file. Save the index by supplying the option \"--save_reference\"."
                },
                "salmon_index": {
                    "type": "string",
                    "format": "path",
                    "fa_icon": "fas fa-bezier-curve",
                    "description": "Path to directory or tar.gz archive for pre-built Salmon index.",
                    "help_text": "Path to directory or tar.gz archive with pre-built Salmon index. If not given one will be created from the given fasta and gtf file. Save the index by supplying the option \"--save_reference\"."
                },
                "transcript_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to transcript FASTA file.",
                    "help_text": "Path to transcript FASTA file.  If not given one will be created from the given fasta and gtf file.",
                    "fa_icon": "far fa-file-code"
                },
                "vep_cache": {
                    "type": "string",
                    "description": "Path to vep's cache directory.",
                    "help_text": "If no directory path is passed, vcf files will not be annotated by vep.",
                    "fa_icon": "fas fa-folder-open"
                },
                "vep_cache_version": {
                    "type": "integer",
                    "default": 110,
                    "description": "Specifies version of vep cache to use.",
                    "fa_icon": "fas fa-folder-open",
                    "enum": [107, 110]
                },
                "vep_plugin_files": {
                    "type": "string",
                    "exists": true,
                    "format": "file-path",
                    "description": "Databases used by both named and custom plugins to annotate variants.",
                    "fa_icon": "fas fa-file-csv",
                    "help_text": "Path to a file containing the absolute paths to databases and their indices used by VEP's custom and named plugins resources defined within the vcfanno toml file. One line per resource.",
                    "pattern": "^\\S+\\.csv$",
                    "mimetype": "text/csv",
                    "schema": "assets/vep_plugin_files_schema.json"
                }
            },
            "required": ["fasta", "gtf"]
        },
        "trimming_options": {
            "title": "Trimming options",
            "type": "object",
            "description": "Options related to trimming of fastq files",
            "default": "",
            "fa_icon": "fas fa-cut",
            "properties": {
                "min_trimmed_length": {
                    "type": "integer",
                    "default": 40,
                    "description": "Discard trimmed reads shorter than this",
                    "help_text": "Minimum length of reads after adapter trimming. Shorter reads are discarded. The program default is 15 bp.  ",
                    "fa_icon": "fas fa-less-than"
                }
            }
        },
        "alignment_options": {
            "title": "Alignment options",
            "type": "object",
            "description": "Options related to alignment",
            "default": "",
            "fa_icon": "fas fa-align-justify",
            "properties": {
                "star_two_pass_mode": {
                    "type": "string",
                    "default": "Basic",
                    "description": "Set two pass mode for STAR",
                    "help_text": "Two pass mode for alignment with STAR. Default is 'Basic' but 'None' can be used to speed up alignment ",
                    "enum": ["Basic", "None"],
                    "fa_icon": "fas fa-tachometer-alt"
                },
                "skip_subsample_region": {
                    "type": "boolean",
                    "default": false,
                    "description": "Turn off subsampling of the region. The region is defined by the subsample_bed parameter and the fraction is given by seed_frac",
                    "fa_icon": "fas fa-toggle-off"
                },
                "skip_downsample": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip downsampling before expression/splicing analysis. The number of reads to be used is defined by num_reads.",
                    "fa_icon": "fas fa-toggle-off"
                },
                "subsample_bed": {
                    "type": "string",
                    "format": "file-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Bed with regions to subsample"
                },
                "seed_frac": {
                    "type": "number",
                    "default": 0.001,
                    "description": "-s INT.FRAC is equivalent to --subsample-seed INT --subsample 0.FRAC in samtools view",
                    "fa_icon": "fas fa-percent"
                },
                "num_reads": {
                    "type": "integer",
                    "default": 120000000,
                    "description": "Number of reads to downsample RNAseq sample to",
                    "fa_icon": "fas fa-list-ol"
                }
            }
        },
        "variant_calling": {
            "title": "Variant calling",
            "type": "object",
            "description": "Options related to variant calling",
            "default": "",
            "fa_icon": "fas fa-filter",
            "properties": {
                "variant_caller": {
                    "type": "string",
                    "default": "bcftools",
                    "fa_icon": "fab fa-algolia",
                    "description": "Program to use for variant calling",
                    "enum": ["bcftools", "gatk"],
                    "help_text": "The pipeline can use either bcftools mpileup/call or GATK haplotypecaller for calling SNV/INDELS on the RNAseq data."
                },
                "bcftools_caller_mode": {
                    "type": "string",
                    "fa_icon": "fab fa-algolia",
                    "default": "multiallelic",
                    "description": "Run bcftools call in either consensus or multiallelic mode",
                    "enum": ["consensus", "multiallelic"],
                    "help_text": "Bcftools call can eitherbe run in multiallelic mode or in consensus mode. In consensus mode a p-value threshold of 0.01 is applied."
                },
                "skip_build_tracks": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip building splice junction tracks for IGV.",
                    "fa_icon": "fas fa-toggle-off"
                },
                "skip_stringtie": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip analysis with StringTie",
                    "fa_icon": "fas fa-toggle-off"
                },
                "skip_vep": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip Ensembl Variant Effect Predictor",
                    "fa_icon": "fas fa-toggle-off"
                },
                "skip_drop_ae": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip DROP Aberrant Expression module ",
                    "fa_icon": "fas fa-toggle-off"
                },
                "skip_drop_as": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip DROP Aberrant Splicing module",
                    "fa_icon": "fas fa-toggle-off"
                },
                "drop_group_samples_ae": {
                    "type": "string",
                    "default": "outrider",
                    "description": "DROP group to run when AE only one allowed. Make sure it matches your reference annotation file.",
                    "fa_icon": "fas fa-list-ol"
                },
                "drop_group_samples_as": {
                    "type": "string",
                    "default": "fraser",
                    "description": "DROP group to run when AS only one allowed. Make sure it matches your reference annotation file.",
                    "fa_icon": "fas fa-list-ol"
                },
                "drop_padjcutoff_ae": {
                    "type": "number",
                    "default": 0.05,
                    "description": "Adjusted p-value cut-off for DROP Aberrant Expression module",
                    "fa_icon": "fas fa-less-than-equal"
                },
                "drop_padjcutoff_as": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Adjusted p-value cut-off for DROP Aberrant Splicing module",
                    "fa_icon": "fas fa-less-than-equal"
                },
                "drop_zscorecutoff": {
                    "type": "number",
                    "default": 0,
                    "description": "Z-score cut-off for DROP Aberrant Expression module",
                    "fa_icon": "fas fa-greater-than-equal"
                },
                "reference_drop_annot_file": {
                    "type": "string",
                    "description": "Path to a tsv file containing sample annotation for DROP. Must be provided to run DROP.",
                    "fa_icon": "fas fa-file",
                    "format": "file-path",
                    "mimetype": "tsv"
                },
                "reference_drop_count_file": {
                    "type": "string",
                    "description": "If you are running DROP Aberrant Expression, provide the path to a tsv or tsv.gz with counts from at least 50 samples to use as controls",
                    "fa_icon": "fas fa-file",
                    "format": "file-path",
                    "mimetype": "tsv"
                },
                "reference_drop_splice_folder": {
                    "type": "string",
                    "description": "If you are running DROP Aberrant Splicing, provide the path to a folder with splice counts from at least 30 samples to use as controls, files inside folder must be tsv.gz",
                    "fa_icon": "fas fa-folder-open"
                },
                "gene_panel_clinical_filter": {
                    "type": "string",
                    "description": "tsv file containing genes on which results from drop and vep will be filtered to avoid incidental findings, columns should be chromosome, gene_start, gene_stop, hgnc_id, hgnc_symbol",
                    "fa_icon": "fas fa-file"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/trimming_options"
        },
        {
            "$ref": "#/definitions/alignment_options"
        },
        {
            "$ref": "#/definitions/variant_calling"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
