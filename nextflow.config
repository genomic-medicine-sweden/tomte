/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    genomic-medicine-sweden/tomte Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null

    // References
    genome                     = 'GRCh38'
    gencode_annotation_version = 46
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = false
    save_reference             = true
    fasta                      = null
    fai                        = null
    gtf                        = null
    star_index                 = null
    transcript_fasta           = null
    salmon_index               = null
    sequence_dict              = null
    skip_download_vep          = true
    skip_download_gnomad       = true
    vep_refs_download          = null

    // Main options
    platform                   = 'illumina'

    // Trimming
    min_trimmed_length         = 40

    // Alignment
    star_two_pass_mode         = 'Basic'
    skip_subsample_region      = false
    skip_downsample            = false
    num_reads                  = 120000000
    seed_frac                  = 0.001
    save_mapped_as_cram        = true

    // Variant calling
    skip_variant_calling       = false
    variant_caller             = 'bcftools'
    bcftools_caller_mode       = 'multiallelic'
    skip_build_tracks          = false
    skip_stringtie             = false
    skip_drop_ae               = false
    skip_drop_as               = false
    skip_export_counts_drop    = true
    drop_group_samples_ae      = 'outrider'
    drop_group_samples_as      = 'fraser'
    drop_padjcutoff_ae         = 0.05
    drop_padjcutoff_as         = 0.1
    drop_zscorecutoff          = 0
    skip_vep                   = false

    // Variant annotation
    vep_cache_version          = 112
    vep_cache                  = null
    vep_plugin_files           = null

    // QC options
    skip_peddy                 = false
    skip_calculate_hb_frac     = false
    hb_genes                   = null

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = "${projectDir}/assets/tomte_logo_light.png"
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = 'results'
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/raredisease'

    // Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'genomic-medicine-sweden/tomte'
    author          = """Clinical Genomics Stockholm"""
    homePage        = 'https://github.com/genomic-medicine-sweden/tomte'
    description     = """Pipeline to analyse RNAseq from raredisease patients"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '3.0.0'
    doi             = '10.5281/zenodo.10828946'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
\033[0;34m
\033[0;34m----------------------------------------------------
\033[0;34m   _____ __  __  _____            _                  _
\033[0;34m  / ____|  \\/  |/ ____|          | |                | |
\033[0;34m | |  __| \\  / | (___    ______  | |_ ___  _ __ ___ | |_ ___
\033[0;34m | | |_ | |\\/| |\\___ \\  |______| | __/ _ \\| '_ ` _ \\| __/ _ \
\033[0;34m | |__| | |  | |____) |          | || (_) | | | | | | ||  __/
\033[0;34m  \\_____|_|  |_|_____/            \\__\\___/|_| |_| |_|\\__\\___|
\033[0;34m----------------------------------------------------
\033[0;34m
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { " https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x
* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""

    }

    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }

}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules/alignment.config'
includeConfig 'conf/modules/allele_specific_calling.config'
includeConfig 'conf/modules/analyse_transcripts.config'
includeConfig 'conf/modules/annotate_snv.config'
includeConfig 'conf/modules/bam_qc.config'
includeConfig 'conf/modules/call_variants.config'
includeConfig 'conf/modules/download_references.config'
includeConfig 'conf/modules/igv_tracks.config'
includeConfig 'conf/modules/general_tomte.config'
includeConfig 'conf/modules/prepare_references.config'
