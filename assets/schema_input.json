{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/genomic-medicine-sweden/tomte/master/assets/schema_input.json",
    "title": "genomic-medicine-sweden/tomte pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "case": {
                "type": "string",
                "meta": ["case"],
                "pattern": "^\\S+$",
                "errorMessage": "Case name must be provided and cannot contain spaces"
            },
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces",
                "meta": ["id", "sample"]
            },
            "fastq_1": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^([\\S\\s]*\\/)?[^\\s\\/]+\\.f(ast)?q\\.gz$",
                "errorMessage": "FastQ file for reads 1 must be provided, cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'"
            },
            "fastq_2": {
                "errorMessage": "FastQ file for reads 2 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "format": "file-path",
                        "exists": true,
                        "pattern": "^\\S+\\.f(ast)?q\\.gz$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ]
            },
            "bam_cram": {
                "errorMessage": "BAM/CRAM file cannot contain spaces and must have extension '.bam' or '.cram'",
                "type": "string",
                "pattern": "^\\S+(\\.bam$|\\.cram$)",
                "format": "file-path",
                "exists": true
            },
            "bai_crai": {
                "errorMessage": "BAM/CRAM index file cannot contain spaces and must have extension '.bai' or '.crai'",
                "type": "string",
                "pattern": "^\\S+(\\.bai$|\\.crai$)",
                "format": "file-path",
                "exists": true
            },
            "strandedness": {
                "type": "string",
                "meta": ["strandedness"],
                "enum": ["unstranded", "forward", "reverse"],
                "errorMessage": "Sample strandness valid input is unstranded,forward or reverse"
            },
            "paternal": {
                "meta": ["paternal"],
                "oneOf": [
                    {
                        "type": "integer",
                        "enum": [0]
                    },
                    {
                        "type": "string",
                        "pattern": "^\\S+$"
                    }
                ],
                "default": "0"
            },
            "maternal": {
                "meta": ["maternal"],
                "oneOf": [
                    {
                        "type": "integer",
                        "enum": [0]
                    },
                    {
                        "type": "string",
                        "pattern": "^\\S+$"
                    }
                ],
                "default": "0"
            },
            "sex": {
                "meta": ["sex"],
                "oneOf": [
                    {
                        "type": "integer",
                        "enum": [0, 1, 2]
                    },
                    {
                        "type": "string",
                        "enum": ["M", "F", "NA", "other"]
                    }
                ],
                "default": "NA",
                "errorMessage": "The valid input for sample sex is M, F, NA, other, 0, 1 or 2"
            }
        },
        "anyOf": [
            {
                "dependentRequired": {
                    "case": ["fastq_1"]
                }
            },
            {
                "dependentRequired": {
                    "case": ["bam_cram"],
                    "bam_cram": ["bai_crai"]
                }
            }
        ],
        "required": ["case", "sample", "strandedness"]
    }
}
