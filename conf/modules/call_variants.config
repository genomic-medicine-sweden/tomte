/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// CALL_VARIANTS
//

process {
    withName: '.*CALL_VARIANTS.*' {
        publishDir = [
            enabled: false,
        ]
    }

    withName: '.*CALL_VARIANTS:CALL_VARIANTS_GATK:GATK4_SPLITNCIGARREADS' {
        ext.prefix = { "${meta.id}_splitncigar" }
    }

    withName: '.*CALL_VARIANTS:CALL_VARIANTS_GATK:GATK4_HAPLOTYPECALLER' {
        ext.prefix = { "${meta.id}_gatk" }
        ext.args = { [
            '--dont-use-soft-clipped-bases',
            '--create-output-variant-index',
            '--standard-min-confidence-threshold-for-calling 20'
        ].join(' ').trim() }
    }

    withName: '.*CALL_VARIANTS:CALL_VARIANTS_GATK:GATK4_VARIANTFILTRATION' {
        ext.args = { [
            '--window 3',
            '--cluster 35',
            '--filter-name "QD" --filter-expression "QD < 2.0"',
            '--filter-name "FS" --filter-expression "FS > 30.0"'
        ].join(' ').trim() }
    }

    withName: '.*CALL_VARIANTS:BCFTOOLS_MPILEUP' {
        ext.args = { '--max-depth 2000' }
        ext.args2 = { [
            '--variants-only',
            params.bcftools_caller_mode.equals('multiallelic')
                ? '--multiallelic-caller'
                : '--consensus-caller --pval-threshold 0.01',
        ].join(' ').trim() }
    }

    withName: '.*CALL_VARIANTS:CALL_VARIANTS_GATK:BCFTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/call_variants" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
        withName: '.*CALL_VARIANTS:SPLIT_MULTIALLELICS' {
        ext.prefix = { "${meta.id}_norm" }
        ext.args = { '--output-type z --multiallelics -both --write-index=tbi' }
    }

    withName: '.*CALL_VARIANTS:REMOVE_DUPLICATES' {
        ext.prefix = { "${meta.id}_split_rmdup" }
        ext.args = { '--output-type z --rm-dup none --write-index=tbi' }
    }

    withName: '.*CALL_VARIANTS:ADD_VARCALLER_TO_BED' {
        ext.args2   = { '-s 1 -b 2 -e 3' }
    }

    withName: '.*CALL_VARIANTS:BCFTOOLS_ANNOTATE' {
        ext.prefix = { "${meta.id}_split_rmdup_info" }
        ext.args = { "-c CHROM,FROM,TO,FOUND_IN --output-type z --write-index=tbi" }
        publishDir = [
            path: { "${params.outdir}/call_variants" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
