/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// DOWNLOAD REFERENCES
//

process {

    withName: '.*DOWNLOAD_REFERENCES:FASTA_DOWNLOAD' {
        ext.when = { !params.fasta }
        publishDir = [
            path: { "${params.outdir}/references" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }

    withName: '.*DOWNLOAD_REFERENCES:GTF_DOWNLOAD' {
        ext.when = { !params.gtf }
        publishDir = [
            path: { "${params.outdir}/references" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }

    withName: '.*DOWNLOAD_REFERENCES:WGET_DOWNLOAD' {
        ext.when = { (!params.skip_download_vep && !params.vep_cache) }
        publishDir = [
            enabled: false
        ]
    }

    withName: '.*DOWNLOAD_REFERENCES:VEP_GNOMAD_DOWNLOAD' {
        ext.when = { !params.skip_download_gnomad }
        publishDir = [
            enabled: false
        ]
    }

    withName: '.*DOWNLOAD_REFERENCES:BUILD_VEP_CACHE' {
        ext.when = { (!params.skip_download_vep && !params.vep_cache) }
        publishDir = [
            path: { "${params.outdir}/references" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }

}
